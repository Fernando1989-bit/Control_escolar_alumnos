-- Script generated by WINDEV Mobile on 16/10/2020 21:18:22
-- Tables of Control_escolar_alumno.wda analysis
-- for MySQL

-- Creating the alumno table
CREATE TABLE `alumno` (
    `alumnoID` BIGINT  PRIMARY KEY ,
    `nombreAlumno` VARCHAR(50) ,
    `noControl` VARCHAR(50) ,
    `edad` INTEGER DEFAULT 0,
    `sexo` VARCHAR(50) );

-- Creating the alumnos_materia table
CREATE TABLE `alumnos_materia` (
    `alumnos_materiaID` BIGINT  PRIMARY KEY ,
    `AlumnoID` BIGINT ,
    `MateriaID` BIGINT ,
    `calificacion` INTEGER DEFAULT 0);
CREATE INDEX `WDIDX_alumnos_materia_AlumnoID` ON `alumnos_materia` (`AlumnoID`);
CREATE INDEX `WDIDX_alumnos_materia_MateriaID` ON `alumnos_materia` (`MateriaID`);

-- Creating the detMovAl table
CREATE TABLE `detMovAl` (
    `detMovAlID` BIGINT  PRIMARY KEY ,
    `AlumnoID` BIGINT ,
    `MovimientoID` BIGINT );
CREATE INDEX `WDIDX_detMovAl_AlumnoID` ON `detMovAl` (`AlumnoID`);
CREATE INDEX `WDIDX_detMovAl_MovimientoID` ON `detMovAl` (`MovimientoID`);

-- Creating the horario_materias table
CREATE TABLE `horario_materias` (
    `horario_materias` BIGINT  PRIMARY KEY ,
    `dia` VARCHAR(50) ,
    `horaInicio` TIME ,
    `horaFin` TIME ,
    `MateriaID` BIGINT );
CREATE INDEX `WDIDX_horario_materias_MateriaID` ON `horario_materias` (`MateriaID`);

-- Creating the maestro table
CREATE TABLE `maestro` (
    `maestroID` BIGINT  PRIMARY KEY ,
    `nombreMaestro` VARCHAR(50) );

-- Creating the materia table
CREATE TABLE `materia` (
    `materiaID` BIGINT  PRIMARY KEY ,
    `nombreMateria` VARCHAR(50) ,
    `claveMat` VARCHAR(50) ,
    `creditos` INTEGER DEFAULT 0);

-- Creating the materias_maestro table
CREATE TABLE `materias_maestro` (
    `materias_maestroID` BIGINT  PRIMARY KEY ,
    `MateriaID` BIGINT ,
    `MaestroID` BIGINT );
CREATE INDEX `WDIDX_materias_maestro_MateriaID` ON `materias_maestro` (`MateriaID`);
CREATE INDEX `WDIDX_materias_maestro_MaestroID` ON `materias_maestro` (`MaestroID`);

-- Creating the movimiento table
CREATE TABLE `movimiento` (
    `movimientoID` BIGINT  PRIMARY KEY ,
    `fechaMovimiento` DATE ,
    `horaMov` TIME ,
    `TipoMovimientoID` BIGINT );
CREATE INDEX `WDIDX_movimiento_TipoMovimientoID` ON `movimiento` (`TipoMovimientoID`);

-- Creating the movimientosPorSesion table
CREATE TABLE `movimientosPorSesion` (
    `movimientosPorSesionID` BIGINT  PRIMARY KEY ,
    `SesionID` BIGINT ,
    `MovimientoID` BIGINT );
CREATE INDEX `WDIDX_movimientosPorSesion_SesionID` ON `movimientosPorSesion` (`SesionID`);
CREATE INDEX `WDIDX_movimientosPorSesion_MovimientoID` ON `movimientosPorSesion` (`MovimientoID`);

-- Creating the nivelUsuario table
CREATE TABLE `nivelUsuario` (
    `nivelUsuarioID` BIGINT  PRIMARY KEY ,
    `descripcionNiv` VARCHAR(50) );

-- Creating the padreAlumno table
CREATE TABLE `padreAlumno` (
    `padreAlumnoID` BIGINT  PRIMARY KEY ,
    `PadreFamiliaID` BIGINT ,
    `AlumnoID` BIGINT );
CREATE INDEX `WDIDX_padreAlumno_PadreFamiliaID` ON `padreAlumno` (`PadreFamiliaID`);
CREATE INDEX `WDIDX_padreAlumno_AlumnoID` ON `padreAlumno` (`AlumnoID`);

-- Creating the padreFamilia table
CREATE TABLE `padreFamilia` (
    `padreFamiliaID` BIGINT  PRIMARY KEY ,
    `nombrePadre` VARCHAR(50) ,
    `direccion` VARCHAR(100) ,
    `telefono` INTEGER DEFAULT 0);

-- Creating the permisos table
CREATE TABLE `permisos` (
    `permisosID` BIGINT  PRIMARY KEY ,
    `descPermiso` VARCHAR(50) );

-- Creating the permisosPorNivelusuario table
CREATE TABLE `permisosPorNivelusuario` (
    `permisosPorNivelusuarioID` BIGINT  PRIMARY KEY ,
    `PermisosID` BIGINT ,
    `NivelUsuarioID` BIGINT );
CREATE INDEX `WDIDX_permisosPorNivelusuario_PermisosID` ON `permisosPorNivelusuario` (`PermisosID`);
CREATE INDEX `WDIDX_permisosPorNivelusuario_NivelUsuarioID` ON `permisosPorNivelusuario` (`NivelUsuarioID`);

-- Creating the sesion table
CREATE TABLE `sesion` (
    `sesionID` BIGINT  PRIMARY KEY ,
    `horaInicioSesion` TIME ,
    `fechaInicio` DATE ,
    `fechaFin` DATE ,
    `horaFinSesion` TIME ,
    `UsuarioID` BIGINT );
CREATE INDEX `WDIDX_sesion_UsuarioID` ON `sesion` (`UsuarioID`);

-- Creating the tipoMovimiento table
CREATE TABLE `tipoMovimiento` (
    `tipoMovimientoID` BIGINT  PRIMARY KEY ,
    `descTipoMov` VARCHAR(50) );

-- Creating the usuario table
CREATE TABLE `usuario` (
    `usuarioID` BIGINT  PRIMARY KEY ,
    `nombreUsuario` VARCHAR(50) ,
    `contraseña` VARCHAR(50) ,
    `NivelUsuarioID` BIGINT );
CREATE INDEX `WDIDX_usuario_NivelUsuarioID` ON `usuario` (`NivelUsuarioID`);
CREATE INDEX `WDIDX_usuario_nombreUsuariocontraseña` ON `usuario` (`nombreUsuario`,`contraseña`);
-- Integrity constraints
ALTER TABLE `alumnos_materia` ADD FOREIGN KEY (`AlumnoID`) REFERENCES `alumno` (`alumnoID`);
ALTER TABLE `alumnos_materia` ADD FOREIGN KEY (`MateriaID`) REFERENCES `materia` (`materiaID`);
ALTER TABLE `materias_maestro` ADD FOREIGN KEY (`MateriaID`) REFERENCES `materia` (`materiaID`);
ALTER TABLE `materias_maestro` ADD FOREIGN KEY (`MaestroID`) REFERENCES `maestro` (`maestroID`);
ALTER TABLE `horario_materias` ADD FOREIGN KEY (`MateriaID`) REFERENCES `materia` (`materiaID`);
ALTER TABLE `padreAlumno` ADD FOREIGN KEY (`PadreFamiliaID`) REFERENCES `padreFamilia` (`padreFamiliaID`);
ALTER TABLE `padreAlumno` ADD FOREIGN KEY (`AlumnoID`) REFERENCES `alumno` (`alumnoID`);
ALTER TABLE `sesion` ADD FOREIGN KEY (`UsuarioID`) REFERENCES `usuario` (`usuarioID`);
ALTER TABLE `usuario` ADD FOREIGN KEY (`NivelUsuarioID`) REFERENCES `nivelUsuario` (`nivelUsuarioID`);
ALTER TABLE `movimientosPorSesion` ADD FOREIGN KEY (`SesionID`) REFERENCES `sesion` (`sesionID`);
ALTER TABLE `movimientosPorSesion` ADD FOREIGN KEY (`MovimientoID`) REFERENCES `movimiento` (`movimientoID`);
ALTER TABLE `movimiento` ADD FOREIGN KEY (`TipoMovimientoID`) REFERENCES `tipoMovimiento` (`tipoMovimientoID`);
ALTER TABLE `permisosPorNivelusuario` ADD FOREIGN KEY (`PermisosID`) REFERENCES `permisos` (`permisosID`);
ALTER TABLE `permisosPorNivelusuario` ADD FOREIGN KEY (`NivelUsuarioID`) REFERENCES `nivelUsuario` (`nivelUsuarioID`);
ALTER TABLE `detMovAl` ADD FOREIGN KEY (`AlumnoID`) REFERENCES `alumno` (`alumnoID`);
ALTER TABLE `detMovAl` ADD FOREIGN KEY (`MovimientoID`) REFERENCES `movimiento` (`movimientoID`);
